{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","console","log","CoinInfo","Name","FullName","Id","MensajeError","p","Error","mensaje","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","Seleccionar","criptomoneda","SelectCripto","useEffect","a","Axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Parrafo","Precio","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","axios","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a80104c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, { Fragment, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    diplay: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    const [state, actualizarState] = useState(stateInicial);\r\n\r\n    const Seleccionar = () => (\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={ e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\">- Seleccione -</option>\r\n                {opciones.map(opcion => (\r\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre} </option>\r\n                ))}\r\n            </Select>\r\n        </Fragment>\r\n    );\r\n\r\n    return [state, Seleccionar, actualizarState];\r\n}\r\n\r\nexport default useMoneda;\r\n","import React, { Fragment, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    diplay: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\n\r\nconst useCriptomoneda = (label, stateInicial, opciones) => {\r\n\r\n    console.log(opciones, 'ACAAA');\r\n\r\n    const [state, actualizarState] = useState(stateInicial);\r\n\r\n    const SelectCripto = () => (\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\">- Seleccione -</option>\r\n                {\r\n                    opciones.map(opcion => (\r\n                        <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName} </option>\r\n                    ))\r\n                }\r\n            </Select>\r\n        </Fragment>\r\n    );\r\n\r\n    return [state, SelectCripto, actualizarState];\r\n}\r\n\r\nexport default useCriptomoneda;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst MensajeError = styled.p`\r\n    background-color: #b7322c;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    font-size: 30px;\r\n    text-transforme: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: 'Bebas Neue', cursive;\r\n`;\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <MensajeError>{mensaje}</MensajeError>\r\n    );\r\n}\r\nexport default Error;","import React, {useEffect, useState} from 'react';\r\nimport styled from '@emotion/styled';\r\nimport useMoneda from '../hooks/useMoneda';\r\nimport useCriptomoneda from '../hooks/useCriptomoneda';\r\nimport Error from '../components/Error';\r\nimport Axios from 'axios';\r\n\r\nconst Boton = styled.input`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    transition: background-color .3s ease;\r\n\r\n    &:hover {\r\n        background-color: #326AC0;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\r\n\r\n    // state del listado de criptomonedas\r\n    const [listacripto, guardarCriptomonedas] = useState([]);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const MONEDAS = [\r\n        { codigo: 'CLP', nombre: 'Peso Chileno'},\r\n        { codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\r\n        { codigo: 'EUR', nombre: 'Euro'},\r\n        { codigo: 'GBP', nombre: 'Libra Esterlina'},\r\n        { codigo: 'MXN', nombre: 'Peso Mexicano'}\r\n    ]\r\n\r\n    // utilizar useMoneda\r\n    const [moneda, Seleccionar] = useMoneda('Elige tu moneda', '', MONEDAS);\r\n\r\n    // utilizar useCriptomoneda\r\n    const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu Criptomoneda', '',listacripto);\r\n\r\n    // ejecutar llamado a la API\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD'\r\n\r\n            const resultado = await Axios.get(url);\r\n\r\n\r\n            guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n        consultarAPI();\r\n    }, [])\r\n\r\n    // cuando el usuario hace submit\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        // validar si ambops campos estan llenos\r\n        if(moneda === '' || criptomoneda === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //pasar los datos al componente principal\r\n        guardarError(false);\r\n        guardarMoneda(moneda);\r\n        guardarCriptomoneda(criptomoneda)\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={cotizarMoneda}\r\n        >\r\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\"/> : null}\r\n            <Seleccionar/>\r\n\r\n            <SelectCripto/>\r\n            <Boton\r\n                type=\"submit\"\r\n                value=\"Calcular\"\r\n            />\r\n\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ResultadoDiv = styled.div`\r\n    color: #FFF;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n\r\n`;\r\n\r\nconst Parrafo = styled.p`\r\n    font-size: 18px;\r\n    span {\r\n        font-weight:bold;\r\n    }\r\n`;\r\n\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n    span {\r\n        font-weight:bold;\r\n    }\r\n`;\r\n\r\nconst Cotizacion = ({resultado}) => {\r\n\r\n    if(Object.keys(resultado).length === 0) return null;\r\n\r\n    console.log(resultado)\r\n\r\n\r\n    return (\r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\r\n            <Parrafo>Precio mas alto del día: <span>{resultado.HIGHDAY}</span></Parrafo>\r\n            <Parrafo>Precio mas bajo del dia: <span>{resultado.LOWDAY}</span></Parrafo>\r\n            <Parrafo>Variación últimas 24 hrs: <span>{resultado.CHANGEPCT24HOUR}</span></Parrafo>\r\n            <Parrafo>Última actualización: <span>{resultado.LASTUPDATE}</span></Parrafo>\r\n        </ResultadoDiv>\r\n    );\r\n}\r\n\r\nexport default Cotizacion;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div class=\"sk-cube-grid\">\r\n            <div class=\"sk-cube sk-cube1\"></div>\r\n            <div class=\"sk-cube sk-cube2\"></div>\r\n            <div class=\"sk-cube sk-cube3\"></div>\r\n            <div class=\"sk-cube sk-cube4\"></div>\r\n            <div class=\"sk-cube sk-cube5\"></div>\r\n            <div class=\"sk-cube sk-cube6\"></div>\r\n            <div class=\"sk-cube sk-cube7\"></div>\r\n            <div class=\"sk-cube sk-cube8\"></div>\r\n            <div class=\"sk-cube sk-cube9\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n\n  @media(min-width:992px) {\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    column-gap: 2rem;  }\n`;\n\nconst Imagen = styled.img`\n    max-width: 100%;\n    margin-top: 5rem;\n`;\n\nconst Heading = styled.h1`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-align: left;\n    font-weight: 700;\n    font-size: 50px;\n    margin-bottom: 50px;\n    margin-top: 80px;\n\n    &::after{\n      content:'';\n      width: 100px;\n      height: 6px;\n      background-color: #66A2FE;\n      display:block;\n    }\n`\n\nfunction App() {\n\n  const [moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false);\n\n  useEffect(() => {\n\n    const cotizarCriptomoneda = async () => {\n      // evitamos la ejecucion la primera vez\n      if (moneda === '') return;\n\n      // consultar la api para obtener la cotizacion\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n\n      const resultado = await axios.get(url);\n\n      //mostrar spinner\n      guardarCargando(true);\n\n      // ocultar el spinner y mostrar el resultado\n      setTimeout(() => {\n\n        // cambiar el estado de cargando\n        guardarCargando(false);\n\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n\n\n\n    }\n    cotizarCriptomoneda();\n\n  }, [moneda, criptomoneda]);\n\n  // mostrar spinner o resultado\n  const componente = (cargando) ? <Spinner /> : <Cotizacion resultado={resultado} />\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen\n          src={imagen}\n          alt=\"imagen cripto\"\n        />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas al Instante</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}